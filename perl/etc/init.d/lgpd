#!/bin/bash
#
# lgpd        Startup script for the lgp LGPD Server
#
# chkconfig: - 85 15
# processname: lgpd
# config: /etc/sysconfig/lgpd
# pidfile: /opt/lgp/server/lgpd.pid
#

# Source function library.
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/lpgd ]; then
        . /etc/sysconfig/lgpd
fi

LGPD_LANG=${LGPD_LANG-"C"}

# Path to the lgpctl script, server binary, and short-form for messages.
lgpctl=/opt/lgp/server/lgpctl
lgpd=${LGPD-/opt/lgp/server/lgpd}
prog=lgpd
pidfile=${PIDFILE-/opt/lgp/server/lgpd.pid}
lockfile=${LOCKFILE-/opt/lgp/server/lppd.lock}
RETVAL=0
STOP_TIMEOUT=${STOP_TIMEOUT-10}

# The semantics of these two functions differ from the way lgpctl does
# things -- attempting to start while running is a failure, and shutdown
# when not running is also a failure.  So we just do it the way init scripts
# are expected to behave here.
start() {
        echo -n $"Starting $prog: "
        LANG=$LGPD_LANG  daemon --pidfile=${pidfile} $lgpd $OPTIONS
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && touch ${lockfile}
        return $RETVAL
}

# When stopping lgpd, a delay (of default 10 second) is required
# before SIGKILLing the lgpd parent; this gives enough time for the
# lgpd parent to SIGKILL any errant children.
stop() {
	echo -n $"Stopping $prog: "
	killproc -p ${pidfile} -d ${STOP_TIMEOUT} $lgpd
	RETVAL=$?
	echo
	[ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
}
reload() {
    echo -n $"Reloading $prog: "
    if ! LANG=$LGPD_LANG  $lgpd $OPTIONS -t >&/dev/null; then
        RETVAL=6
        echo $"not reloading due to configuration syntax error"
        failure $"not reloading $lgpd due to configuration syntax error"
    else
        # Force LSB behaviour from killproc
        LSB=1 killproc -p ${pidfile} $lgpd -HUP
        RETVAL=$?
        if [ $RETVAL -eq 7 ]; then
            failure $"lgpd shutdown"
        fi
    fi
    echo
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
        status -p ${pidfile} $lgpd
	RETVAL=$?
	;;
  restart)
	stop
	start
	;;
  condrestart|try-restart)
	if status -p ${pidfile} $lgpd >&/dev/null; then
		stop
		start
	fi
	;;
  force-reload|reload)
        reload
	;;
  graceful|help|configtest|fullstatus)
	$lgpctl $@
	RETVAL=$?
	;;
  *)
	echo $"Usage: $prog {start|stop|restart|condrestart|try-restart|force-reload|reload|status|fullstatus|graceful|help|configtest}"
	RETVAL=2
esac

exit $RETVAL


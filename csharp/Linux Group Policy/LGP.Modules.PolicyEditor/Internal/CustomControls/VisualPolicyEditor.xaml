<UserControl x:Class="LGP.Modules.PolicyEditor.Internal.CustomControls.VisualPolicyEditor" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:Internal="clr-namespace:LGP.Modules.PolicyEditor.Internal" mc:Ignorable="d" d:DesignHeight="303" d:DesignWidth="572">
  <UserControl.Resources>

    <LinearGradientBrush x:Key="alt0" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Color="#FFFFFFFF" Offset="0.5" />
      <GradientStop Color="#FFEEEEEE" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="alt1" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Color="#FFFFFFFF" Offset="0.5" />
      <GradientStop Color="#FFDDDDDD" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="RowStyle" TargetType="DataGridRow">

      <Style.Resources>
        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0.5,0" EndPoint="0.5,1">
          <GradientStop Color="#FFFFFFFF" Offset="0.5" />
          <GradientStop Color="#FFD6E2F8" Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FF000000" />
      </Style.Resources>

      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="FontWeight" Value="ExtraBold" />
          <Setter Property="Foreground" Value="#FF466A8D" />
        </Trigger>
        <Trigger Property="AlternationIndex" Value="1">
          <Setter Property="Background" Value="{StaticResource alt0}" />
        </Trigger>
        <Trigger Property="AlternationIndex" Value="0">
          <Setter Property="Background" Value="{StaticResource alt1}" />
        </Trigger>
        <Trigger Property="Validation.HasError" Value="true">
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="BorderBrush" Value="Red" />
          <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
        </Trigger>
        <Trigger Property="Validation.HasError" Value="false">
          <Setter Property="ToolTip" Value="" />
        </Trigger>
      </Style.Triggers>

      <Setter Property="ValidationErrorTemplate">
        <Setter.Value>
          <ControlTemplate>
            <Grid Margin="2,2,2,2" ToolTip="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGridRow}},Path=(Validation.Errors).CurrentItem.ErrorContent}">
              <Ellipse StrokeThickness="0" Fill="#AAAA0000" Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" />
              <TextBlock Text="!" FontSize="9" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>

    </Style>

  </UserControl.Resources>
  <Grid>
    <DataGrid HorizontalAlignment="Stretch" LoadingRow="DataGridLoadingRow" Margin="0,5,0,0" Name="dataGrid1" VerticalAlignment="Stretch" AutoGenerateColumns="False" ItemsSource="{Binding Path=_list, ValidatesOnDataErrors=true, ValidatesOnExceptions=true}" BorderThickness="1" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" Foreground="#FF688CAF" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="LightGray" MinRowHeight="20" RowHeight="25" ColumnHeaderHeight="25" FontSize="11" AlternationCount="2" RowDetailsVisibilityMode="Visible" RowStyle="{StaticResource RowStyle}" SelectionChanged="DataGrid1SelectionChanged" AllowDrop="True" CurrentCellChanged="DataGrid1CurrentCellChanged" PreparingCellForEdit="DataGrid1PreparingCellForEdit" CellEditEnding="DataGrid1CellEditEnding" MouseLeave="DataGrid1MouseLeave">

      <DataGrid.RowValidationRules>
        <Internal:RowValidationRule ValidationStep="UpdatedValue" />
      </DataGrid.RowValidationRules>
      <DataGrid.Columns>
        <DataGridCheckBoxColumn Binding="{Binding IsSelected,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="{Resx ResxName=LGP.Modules.PolicyEditor.Properties.Resources, Key=Selected}" x:Name="Selected" IsReadOnly="False" />
        <DataGridComboBoxColumn Header="{Resx ResxName=LGP.Modules.PolicyEditor.Properties.Resources, Key=Key}" SelectedValueBinding="{Binding EntryKey,Mode=TwoWay,NotifyOnSourceUpdated=True}" x:Name="Key" />
        <DataGridTextColumn Binding="{Binding Rvalue1,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue1" x:Name="Rvalue1" />
        <DataGridTextColumn Binding="{Binding Rvalue2,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue2" x:Name="Rvalue2" />
        <DataGridTextColumn Binding="{Binding Rvalue3,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue3" x:Name="Rvalue3" />
        <DataGridTextColumn Binding="{Binding Rvalue4,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue4" x:Name="Rvalue4" />
        <DataGridTextColumn Binding="{Binding Rvalue5,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue5" x:Name="Rvalue5" />
        <DataGridTextColumn Binding="{Binding Rvalue6,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue6" x:Name="Rvalue6" />
        <DataGridTextColumn Binding="{Binding Rvalue7,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue7" x:Name="Rvalue7" />
        <DataGridTextColumn Binding="{Binding Rvalue8,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue8" x:Name="Rvalue8" />
        <DataGridTextColumn Binding="{Binding Rvalue9,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue9" x:Name="Rvalue9" />
        <DataGridTextColumn Binding="{Binding Rvalue10,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue10" x:Name="Rvalue10" />
        <DataGridTextColumn Binding="{Binding Rvalue11,Mode=TwoWay,NotifyOnSourceUpdated=True}" Header="Rvalue11" x:Name="Rvalue11" />
      </DataGrid.Columns>
      <DataGrid.CellStyle>
        <Style TargetType="DataGridCell">
          <Setter Property="Padding" Value="5,3,5,0" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridCell}">
                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                  <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.CellStyle>
      <DataGrid.Background>
        <SolidColorBrush />
      </DataGrid.Background>
    </DataGrid>
  </Grid>
</UserControl>